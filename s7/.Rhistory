r_files
r.files
r.files
r.files
r.files
ifile
strsplit(ifile,"/")
tail(strsplit(ifile,"/"),1)
tail(strsplit(ifile,"/")[[1]],1)
tail(strsplit(gsub("\\.r","",ifile),"/")[[1]],1)
as.numeric(tail(strsplit(gsub("\\.r","",ifile),"/")[[1]],1))
time
ls()
dim(output)
len(output)
lenght(output)
length(output)
output
%reset -f
rm(list=ls())
output
cases
cases
cases
cases
icase
r.files
icase
load("/pic/projects/dvz/xhs_simus/dust/fy18/s7_1a/tec_data/3000.00.r")
load("/pic/projects/dvz/xhs_simus/dust/fy18/s7_1a/r2/tec_data/3000.00.r")
ls()
output
cases
cases
cases
dim(output)
output
dim(output)
output
len(output)
length(output)
names(output)
length(output)
NAMES(output)
names(output)
names(output)
ifile
names(output)
r.fiels
r.files
dim(output[satu.name])
dim(output[satu.name])
output[satu.name]
typeof(output[satu.name])
typeof(output[satu.name][[1]])
dim(output[satu.name][[1]])
n
nx
ny
nz
xxx=which(output[satu.name][[1]]>0.99999999)
xxx=which(output[satu.name][[1]]>0.99999999,arr.ind=TUE)
xxx=which(output[satu.name][[1]]>0.99999999,arr.ind=TRUE)
xxx
dim(xxx)
xxx[,3]
max(xxx[,3])
xxx=which(output[satu.name][[1]]<0.99999999,arr.ind=TRUE)
min(xxx[,3])
icase
z[13]
z
wt.iz
which.min(xxx[,3])
min(xxx[,3])
head(xxx)
output[satu.name][[1]][4,42,13]
wt.iz
output[satu.name][[1]][,,wt.iz]
output[satu.name][[1]][4,42,13]
output[satu.name][[1]][4,42,13]
output[satu.name][[1]][,,wt.iz]
output[satu.name][[1]][,,wt.iz+1]
output[satu.name][[1]][,,wt.iz]
output[solute.name][[1]][,,wt.iz]
output[solute.name][[1]][,,wt.iz]
solute.xy
mean(solute.xy)
nx
ny
nz
nx
ny
nz
filled.contour(solute.xy)
length(x)
length(y)
length(z)
length(x)
length(dx)
xxx = meshgrid(dx,dy)
xxx = expand(dx,dy)
xxx = expand.grid(dx,dy)
lengh(xxx)
length(xxx)
xxx[1]
xxx[2]
xxx = expand.grid(dx,dy)
xxx[1:10]
xxx[1][1:10]
xxx[1]
length(xxx[1])
length(xxx[[1]])
dim(xxx[[1]])
cell.areas
array(cell.areas,c(nx,ny))
cell.areas
cell.areas[crib.ix,crib.iy]
sum(cell.areas[crib.ix,crib.iy])
crib.area
sum(dx[crib.ix])
sum(dy[crib.iy])
crib.ix = 27:37
crib.iy = 61:65
crib.area = sum(dx[crib.ix])*sum(dy[crib.iy])

cell.areas[27,37]
cell.areas[27,61]
dx[27]
dy[61]
cell.areas[27,61]
xxx[27,61]
yyy[27,61]
xxx[27,61]
dim(xxx)
dim(yyy)
dx.grids
dx.grids
dy.grids
dy.grids
dy.grids
dy.grids
nx
nx
dy.grids
cell.areas
len(dx.grids)
lengh(dx.grids)
length(dx.grids)
length(dy.grids)
nx*ny
length(dx)
ny
length(dy)
nx
nz
cell.areas
cell.areas[27:37,61:65]
sum(cell.areas[27:37,61:65])
crib.area
dim(solute.xy)
solute.xy[-1,]
x=c(1,3,4,5)
x[-1]
x[1:-1]
tail(x,n=-=1)
tail(x,n=-1)
head(x,n=-1)
xxx=solute.xy[1:nx,]+solute.xy[2:(nx+1),]
xxx=(solute.xy[1:nx,]+solute.xy[2:(nx+1),])/2
dim(xxx)
dim(solute.xy)
time
x[-1]
x[-1]+0.5*dx
y[-1]+0.5*dy
diff(y[-1]+0.5*dy)
diff(x)
diff(y)
x[min(crib.ix)]
itime
itime
time
time
time
r.files
r.files
caes
cases
dev.off()
ls
